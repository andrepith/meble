{"version":3,"sources":["store/reducers/filterReducer/index.js","store/reducers/index.js","store/types/index.js","store/index.js","store/actions/filterAction/index.js","components/activeFilters/index.js","components/searchByName/index.js","components/deliveryFilter/index.js","components/furnitureStylesFilter/index.js","components/cards/index.js","containers/dashboard/index.js","services/index.js","App.js","serviceWorker.js","index.js"],"names":["defaultState","combineReducers","activeFilter","state","type","payload","middleWare","applyMiddleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","setActiveFilter","dispatch","connect","isActive","Object","keys","length","className","name","get","delivery","map","item","key","furnitureStyles","onClick","setNameToFilter","debounce","onChange","e","preventDefault","target","value","placeholder","optionsDelivery","Infinity","onSelect","selectedList","options","displayValue","selectedValues","showCheckbox","onRemove","style","chips","display","props","stylesOption","styles","Cards","data","price","description","furniture_style","delivery_time","toLocaleString","useState","defaultData","setDefaultData","setData","setStyles","fetchApi","a","axios","then","res","products","furniture_styles","console","error","useEffect","currentData","filter","toLowerCase","includes","filterByName","deliveryTime","Math","max","filterByDelivery","filtered","Set","some","has","filterByFurnitureStyles","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d16a7746.chunk.js","sourcesContent":["import { SET_ACTIVE_FILTER } from \"store/types\";\n\nconst defaultState = {};\n\nexport const activeFilter = (state = defaultState, { type, payload }) => {\n  switch (type) {\n    case SET_ACTIVE_FILTER:\n      return payload;\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { activeFilter } from \"./filterReducer\";\n\nexport default combineReducers({ activeFilter });\n","export const SET_ACTIVE_FILTER = \"SET_ACTIVE_FILTER\";\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\n\nconst middleWare = applyMiddleware(thunk);\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(reducers, composeEnhancers(middleWare));\n","import { SET_ACTIVE_FILTER } from \"store/types\";\n\nexport const setActiveFilter = payload => dispatch => {\n  dispatch({\n    type: SET_ACTIVE_FILTER,\n    payload\n  });\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { get } from \"lodash\";\nimport { setActiveFilter } from \"store/actions\";\n\nimport \"./index.css\";\n\nconst ActiveFilters = ({ activeFilter, setActiveFilter }) => {\n  const isActive = Object.keys(activeFilter).length;\n  const handleRemove = () => {\n    setActiveFilter({});\n  };\n\n  if (isActive) {\n    return (\n      <div className=\"wrapper-filters\">\n        {!!activeFilter.name && (\n          <span className=\"filter-tag\">name: {activeFilter.name}</span>\n        )}\n        {!!get(activeFilter, \"delivery\", []).length &&\n          activeFilter.delivery.map((item, key) => {\n            return (\n              <span key={key} className=\"filter-tag\">\n                {item.name}\n              </span>\n            );\n          })}\n        {!!get(activeFilter, \"furnitureStyles\", []).length &&\n          activeFilter.furnitureStyles.map((item, key) => {\n            return (\n              <span key={key} className=\"filter-tag\">\n                {item.name}\n              </span>\n            );\n          })}\n        {!!isActive &&\n          (activeFilter.name ||\n            !!get(activeFilter, \"delivery\", []).length ||\n            !!get(activeFilter, \"furnitureStyles\", []).length) && (\n            <span className=\"filter-tag filter-remove\" onClick={handleRemove}>\n              Remove all\n            </span>\n          )}\n      </div>\n    );\n  }\n  return <></>;\n};\n\nconst mapStateToProps = ({ activeFilter }) => ({ activeFilter });\n\nexport default connect(mapStateToProps, { setActiveFilter })(ActiveFilters);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { debounce } from \"lodash\";\nimport { setActiveFilter } from \"store/actions\";\n\nimport \"./index.css\";\n\nconst SearchComponent = ({ setActiveFilter, activeFilter }) => {\n  const handleChange = e => {\n    e.preventDefault();\n    setNameToFilter(e.target.value);\n  };\n\n  const setNameToFilter = debounce(name => {\n    setActiveFilter({ ...activeFilter, name });\n  }, 300);\n\n  return (\n    <div className=\"wrapper-search\">\n      <input\n        className=\"search__input\"\n        onChange={handleChange}\n        placeholder=\"Search by name....\"\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ activeFilter }) => ({ activeFilter });\n\nexport default connect(mapStateToProps, { setActiveFilter })(SearchComponent);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport { setActiveFilter } from \"store/actions\";\n\nconst optionsDelivery = [\n  { name: \"1 Week\", value: 7 },\n  { name: \"2 Weeks\", value: 14 },\n  { name: \"1 Months\", value: 30 },\n  { name: \"All\", value: Infinity }\n];\n\nconst DeliveryFilter = ({ setActiveFilter, activeFilter }) => {\n  const onSelect = selectedList => {\n    setActiveFilter({\n      ...activeFilter,\n      delivery: selectedList\n    });\n  };\n\n  return (\n    <Multiselect\n      options={optionsDelivery}\n      displayValue=\"name\"\n      selectedValues={activeFilter.delivery || []}\n      showCheckbox={true}\n      onSelect={onSelect}\n      onRemove={onSelect}\n      placeholder=\"Delivery Time\"\n      style={{ chips: { display: \"none\" } }}\n    />\n  );\n};\n\nconst mapStateToProps = ({ activeFilter }) => ({ activeFilter });\n\nexport default connect(mapStateToProps, { setActiveFilter })(DeliveryFilter);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport { setActiveFilter } from \"store/actions\";\n\nconst FurnitureStylesFilter = props => {\n  const { setActiveFilter, activeFilter, styles } = props;\n\n  const stylesOption = styles.map(name => ({ name }));\n  const onSelect = selectedList => {\n    setActiveFilter({\n      ...activeFilter,\n      furnitureStyles: selectedList\n    });\n  };\n\n  return (\n    <Multiselect\n      options={stylesOption}\n      displayValue=\"name\"\n      selectedValues={activeFilter.furnitureStyles || []}\n      showCheckbox={true}\n      onSelect={onSelect}\n      onRemove={onSelect}\n      placeholder=\"Furniture Styles\"\n      style={{ chips: { display: \"none\" } }}\n    />\n  );\n};\n\nconst mapStateToProps = ({ activeFilter }) => ({ activeFilter });\n\nexport default connect(mapStateToProps, { setActiveFilter })(\n  FurnitureStylesFilter\n);\n","import React from \"react\";\n\nimport \"./index.css\";\n\nconst Cards = ({\n  data: { name, price, description, furniture_style, delivery_time }\n}) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card__title\">\n        <h2>{name}</h2>\n        <div className=\"price\">Rp. {price.toLocaleString(\"id-ID\")}</div>\n      </div>\n      <div className=\"card__description\">{description}</div>\n      <div className=\"card__furniture-style\">\n        {furniture_style.map((item, key) => (\n          <div className=\"pills\" key={key}>\n            {item}\n          </div>\n        ))}\n      </div>\n      <div className=\"card__delivery\">Delivery Days: {delivery_time}</div>\n    </div>\n  );\n};\n\nexport default Cards;\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { get } from \"lodash\";\nimport { mebleService } from \"services\";\n\nimport ActiveFilters from \"components/activeFilters\";\nimport SearchComponent from \"components/searchByName\";\nimport DeliveryFilter from \"components/deliveryFilter\";\nimport FurnitureStylesFilter from \"components/furnitureStylesFilter\";\nimport Cards from \"components/cards\";\n\nimport \"./index.css\";\n\nconst Dashboard = ({ activeFilter }) => {\n  const [defaultData, setDefaultData] = useState({});\n  const [data, setData] = useState({});\n  const [styles, setStyles] = useState([]);\n\n  const fetchApi = async () => {\n    try {\n      const res = await mebleService();\n      setDefaultData(res.products);\n      setData(res.products);\n      setStyles(res.furniture_styles);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const filterByName = () => {\n    if (Object.keys(data).length) {\n      const currentData = data.filter(item =>\n        item.name\n          .toLowerCase()\n          .includes(get(activeFilter, \"name\", \"\").toLowerCase())\n      );\n      setData(currentData);\n    }\n  };\n\n  const filterByDelivery = () => {\n    if (Object.keys(data).length && !!activeFilter.delivery) {\n      const deliveryTime = get(activeFilter, \"delivery\", []).map(\n        item => item.value\n      );\n      const currentData = data.filter(\n        item => item.delivery_time <= Math.max(...deliveryTime)\n      );\n      setData(currentData);\n    }\n  };\n\n  const filterByFurnitureStyles = () => {\n    if (Object.keys(data).length && !!activeFilter.furnitureStyles) {\n      const furnitureStyles = get(activeFilter, \"furnitureStyles\", []).map(\n        item => item.name\n      );\n      const filtered = new Set(furnitureStyles);\n      const currentData = data.filter(item =>\n        item.furniture_style.some(filter => filtered.has(filter))\n      );\n      setData(currentData);\n    }\n  };\n\n  useEffect(() => {\n    fetchApi();\n  }, []);\n\n  useEffect(() => {\n    filterByName();\n    filterByDelivery();\n    filterByFurnitureStyles();\n    if (!Object.keys(activeFilter).length) {\n      setData(defaultData);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeFilter]);\n\n  try {\n    return (\n      <div className=\"wrapper-app\">\n        <SearchComponent />\n        <div className=\"wrapper-filter\">\n          <DeliveryFilter />\n          <FurnitureStylesFilter styles={styles} />\n        </div>\n        <ActiveFilters />\n        {!!Object.keys(data).length ? (\n          <div className=\"wrapper-card\">\n            {data.map((item, key) => (\n              <Cards key={key} data={item} />\n            ))}\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </div>\n    );\n  } catch (error) {\n    console.error(error);\n    return <div>Oops There is something wrong</div>;\n  }\n};\n\nconst mapStateToProps = ({ activeFilter }) => ({ activeFilter });\n\nexport default connect(mapStateToProps, {})(Dashboard);\n","import axios from \"axios\";\n\nexport const mebleService = () => {\n  return axios\n    .get(\"http://www.mocky.io/v2/5c9105cb330000112b649af8\")\n    .then(res => res.data);\n};\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"store\";\n\nimport Dashboard from \"containers/dashboard\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Dashboard />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}